
// Function to read ignore patterns from a file
function readIgnorePatterns(filepath) {
  const patterns = [];
  if (fs.existsSync(filepath)) {
    const lines = fs.readFileSync(filepath, 'utf-8').split('\n');
    for (const line of lines) {
      patterns.push(line.trim());
    }
  }
  return patterns;
}

// Function to convert a simple wildcard pattern to a regex
function convertWildcardToRegex(pattern) {
  let regex = pattern.replace(/\*/g, '.*').replace(/\?/g, '.');
  return `^${regex}$`;
}

// Function to check if a file matches any simple wildcard pattern
function matchesAnyPattern(filename, patterns) {
  const onlyFilename = filename.split('/').pop() || '';
  for (const pattern of patterns) {
    const regex = new RegExp(convertWildcardToRegex(pattern));
    if (onlyFilename.match(regex)) {
      return true;
    }
  }
  return false;
}

const allPatterns = [
  ".env",
  "*.env",
  "**.env",
  "**/.env",
  "**/*.env",
  "**/**.env",
  "CONFIG",
  ".CONFIG",
  "*.CONFIG",
  "**.CONFIG",
  "**/.CONFIG",
  "**/*.CONFIG",
  "**/**.CONFIG",
  "DOCS",
  ".DOCS",
  "*.DOCS",
  "**.DOCS",
  "**/.DOCS",
  "**/*.DOCS",
  "**/**.DOCS",
  "Dockerfile",
  ".Dockerfile",
  "*.Dockerfile",
  "**.Dockerfile",
  "**/.Dockerfile",
  "**/*.Dockerfile",
  "**/**.Dockerfile",
  "LICENSE",
  ".LICENSE",
  "*.LICENSE",
  "**.LICENSE",
  "**/.LICENSE",
  "**/*.LICENSE",
  "**/**.LICENSE",
  "MIT",
  ".MIT",
  "*.MIT",
  "**.MIT",
  "**/.MIT",
  "**/*.MIT",
  "**/**.MIT",
  "Makefile",
  ".Makefile",
  "*.Makefile",
  "**.Makefile",
  "**/.Makefile",
  "**/*.Makefile",
  "**/**.Makefile",
  "OLD",
  ".OLD",
  "*.OLD",
  "**.OLD",
  "**/.OLD",
  "**/*.OLD",
  "**/**.OLD",
  "keystore",
  ".keystore",
  "*.keystore",
  "**.keystore",
  "**/.keystore",
  "**/*.keystore",
  "**/**.keystore",
  "kubeconfig",
  ".kubeconfig",
  "*.kubeconfig",
  "**.kubeconfig",
  "**/.kubeconfig",
  "**/*.kubeconfig",
  "**/**.kubeconfig",
  ".Dockerfile",
  "*.Dockerfile",
  "**.Dockerfile",
  "**/.Dockerfile",
  "**/*.Dockerfile",
  "**/**.Dockerfile",
  ".OLD",
  "*.OLD",
  "**.OLD",
  "**/.OLD",
  "**/*.OLD",
  "**/**.OLD",
  ".api",
  "*.api",
  "**.api",
  "**/.api",
  "**/*.api",
  "**/**.api",
  ".apk",
  "*.apk",
  "**.apk",
  "**/.apk",
  "**/*.apk",
  "**/**.apk",
  ".avi",
  "*.avi",
  "**.avi",
  "**/.avi",
  "**/*.avi",
  "**/**.avi",
  ".avif",
  "*.avif",
  "**.avif",
  "**/.avif",
  "**/*.avif",
  "**/**.avif",
  ".base64",
  "*.base64",
  "**.base64",
  "**/.base64",
  "**/*.base64",
  "**/**.base64",
  ".cert",
  "*.cert",
  "**.cert",
  "**/.cert",
  "**/*.cert",
  "**/**.cert",
  ".cfg",
  "*.cfg",
  "**.cfg",
  "**/.cfg",
  "**/*.cfg",
  "**/**.cfg",
  ".config",
  "*.config",
  "**.config",
  "**/.config",
  "**/*.config",
  "**/**.config",
  ".creds",
  "*.creds",
  "**.creds",
  "**/.creds",
  "**/*.creds",
  "**/**.creds",
  ".crt",
  "*.crt",
  "**.crt",
  "**/.crt",
  "**/*.crt",
  "**/**.crt",
  ".csv",
  "*.csv",
  "**.csv",
  "**/.csv",
  "**/*.csv",
  "**/**.csv",
  ".custom",
  "*.custom",
  "**.custom",
  "**/.custom",
  "**/*.custom",
  "**/**.custom",
  ".db",
  "*.db",
  "**.db",
  "**/.db",
  "**/*.db",
  "**/**.db",
  ".doc",
  "*.doc",
  "**.doc",
  "**/.doc",
  "**/*.doc",
  "**/**.doc",
  ".docs",
  "*.docs",
  "**.docs",
  "**/.docs",
  "**/*.docs",
  "**/**.docs",
  ".docx",
  "*.docx",
  "**.docx",
  "**/.docx",
  "**/*.docx",
  "**/**.docx",
  ".enc",
  "*.enc",
  "**.enc",
  "**/.enc",
  "**/*.enc",
  "**/**.enc",
  ".encrypted",
  "*.encrypted",
  "**.encrypted",
  "**/.encrypted",
  "**/*.encrypted",
  "**/**.encrypted",
  ".env",
  "*.env",
  "**.env",
  "**/.env",
  "**/*.env",
  "**/**.env",
  ".error",
  "*.error",
  "**.error",
  "**/.error",
  "**/*.error",
  "**/**.error",
  ".example",
  "*.example",
  "**.example",
  "**/.example",
  "**/*.example",
  "**/**.example",
  ".exe",
  "*.exe",
  "**.exe",
  "**/.exe",
  "**/*.exe",
  "**/**.exe",
  ".geojson",
  "*.geojson",
  "**.geojson",
  "**/.geojson",
  "**/*.geojson",
  "**/**.geojson",
  ".gif",
  "*.gif",
  "**.gif",
  "**/.gif",
  "**/*.gif",
  "**/**.gif",
  ".hotfix",
  "*.hotfix",
  "**.hotfix",
  "**/.hotfix",
  "**/*.hotfix",
  "**/**.hotfix",
  ".ico",
  "*.ico",
  "**.ico",
  "**/.ico",
  "**/*.ico",
  "**/**.ico",
  ".info",
  "*.info",
  "**.info",
  "**/.info",
  "**/*.info",
  "**/**.info",
  ".ini",
  "*.ini",
  "**.ini",
  "**/.ini",
  "**/*.ini",
  "**/**.ini",
  ".init",
  "*.init",
  "**.init",
  "**/.init",
  "**/*.init",
  "**/**.init",
  ".jar",
  "*.jar",
  "**.jar",
  "**/.jar",
  "**/*.jar",
  "**/**.jar",
  ".jpeg",
  "*.jpeg",
  "**.jpeg",
  "**/.jpeg",
  "**/*.jpeg",
  "**/**.jpeg",
  ".jpg",
  "*.jpg",
  "**.jpg",
  "**/.jpg",
  "**/*.jpg",
  "**/**.jpg",
  ".json",
  "*.json",
  "**.json",
  "**/.json",
  "**/*.json",
  "**/**.json",
  ".json5",
  "*.json5",
  "**.json5",
  "**/.json5",
  "**/*.json5",
  "**/**.json5",
  ".jsonb",
  "*.jsonb",
  "**.jsonb",
  "**/.jsonb",
  "**/*.jsonb",
  "**/**.jsonb",
  ".jsonl",
  "*.jsonl",
  "**.jsonl",
  "**/.jsonl",
  "**/*.jsonl",
  "**/**.jsonl",
  ".key",
  "*.key",
  "**.key",
  "**/.key",
  "**/*.key",
  "**/**.key",
  ".keystore",
  "*.keystore",
  "**.keystore",
  "**/.keystore",
  "**/*.keystore",
  "**/**.keystore",
  ".kubeconfig",
  "*.kubeconfig",
  "**.kubeconfig",
  "**/.kubeconfig",
  "**/*.kubeconfig",
  "**/**.kubeconfig",
  ".ldb",
  "*.ldb",
  "**.ldb",
  "**/.ldb",
  "**/*.ldb",
  "**/**.ldb",
  ".lock",
  "*.lock",
  "**.lock",
  "**/.lock",
  "**/*.lock",
  "**/**.lock",
  ".log",
  "*.log",
  "**.log",
  "**/.log",
  "**/*.log",
  "**/**.log",
  ".man",
  "*.man",
  "**.man",
  "**/.man",
  "**/*.man",
  "**/**.man",
  ".md",
  "*.md",
  "**.md",
  "**/.md",
  "**/*.md",
  "**/**.md",
  ".md5",
  "*.md5",
  "**.md5",
  "**/.md5",
  "**/*.md5",
  "**/**.md5",
  ".mdown",
  "*.mdown",
  "**.mdown",
  "**/.mdown",
  "**/*.mdown",
  "**/**.mdown",
  ".mp4",
  "*.mp4",
  "**.mp4",
  "**/.mp4",
  "**/*.mp4",
  "**/**.mp4",
  ".mysql",
  "*.mysql",
  "**.mysql",
  "**/.mysql",
  "**/*.mysql",
  "**/**.mysql",
  ".nginx",
  "*.nginx",
  "**.nginx",
  "**/.nginx",
  "**/*.nginx",
  "**/**.nginx",
  ".pdf",
  "*.pdf",
  "**.pdf",
  "**/.pdf",
  "**/*.pdf",
  "**/**.pdf",
  ".php_old",
  "*.php_old",
  "**.php_old",
  "**/.php_old",
  "**/*.php_old",
  "**/**.php_old",
  ".pid",
  "*.pid",
  "**.pid",
  "**/.pid",
  "**/*.pid",
  "**/**.pid",
  ".plist",
  "*.plist",
  "**.plist",
  "**/.plist",
  "**/*.plist",
  "**/**.plist",
  ".png",
  "*.png",
  "**.png",
  "**/.png",
  "**/*.png",
  "**/**.png",
  ".pref",
  "*.pref",
  "**.pref",
  "**/.pref",
  "**/*.pref",
  "**/**.pref",
  ".prefs",
  "*.prefs",
  "**.prefs",
  "**/.prefs",
  "**/*.prefs",
  "**/**.prefs",
  ".priv",
  "*.priv",
  "**.priv",
  "**/.priv",
  "**/*.priv",
  "**/**.priv",
  ".psb",
  "*.psb",
  "**.psb",
  "**/.psb",
  "**/*.psb",
  "**/**.psb",
  ".psd",
  "*.psd",
  "**.psd",
  "**/.psd",
  "**/*.psd",
  "**/**.psd",
  ".pub",
  "*.pub",
  "**.pub",
  "**/.pub",
  "**/*.pub",
  "**/**.pub",
  ".pubkey",
  "*.pubkey",
  "**.pubkey",
  "**/.pubkey",
  "**/*.pubkey",
  "**/**.pubkey",
  ".raw",
  "*.raw",
  "**.raw",
  "**/.raw",
  "**/*.raw",
  "**/**.raw",
  ".settings",
  "*.settings",
  "**.settings",
  "**/.settings",
  "**/*.settings",
  "**/**.settings",
  ".sh",
  "*.sh",
  "**.sh",
  "**/.sh",
  "**/*.sh",
  "**/**.sh",
  ".sha1",
  "*.sha1",
  "**.sha1",
  "**/.sha1",
  "**/*.sha1",
  "**/**.sha1",
  ".sha256",
  "*.sha256",
  "**.sha256",
  "**/.sha256",
  "**/*.sha256",
  "**/**.sha256",
  ".sha512",
  "*.sha512",
  "**.sha512",
  "**/.sha512",
  "**/*.sha512",
  "**/**.sha512",
  ".sql",
  "*.sql",
  "**.sql",
  "**/.sql",
  "**/*.sql",
  "**/**.sql",
  ".stack",
  "*.stack",
  "**.stack",
  "**/.stack",
  "**/*.stack",
  "**/**.stack",
  ".state",
  "*.state",
  "**.state",
  "**/.state",
  "**/*.state",
  "**/**.state",
  ".store",
  "*.store",
  "**.store",
  "**/.store",
  "**/*.store",
  "**/**.store",
  ".svg",
  "*.svg",
  "**.svg",
  "**/.svg",
  "**/*.svg",
  "**/**.svg",
  ".todo",
  "*.todo",
  "**.todo",
  "**/.todo",
  "**/*.todo",
  "**/**.todo",
  ".txt",
  "*.txt",
  "**.txt",
  "**/.txt",
  "**/*.txt",
  "**/**.txt",
  ".vcxproj",
  "*.vcxproj",
  "**.vcxproj",
  "**/.vcxproj",
  "**/*.vcxproj",
  "**/**.vcxproj",
  ".webmanifest",
  "*.webmanifest",
  "**.webmanifest",
  "**/.webmanifest",
  "**/*.webmanifest",
  "**/**.webmanifest",
  ".webp",
  "*.webp",
  "**.webp",
  "**/.webp",
  "**/*.webp",
  "**/**.webp",
  ".xcconfig",
  "*.xcconfig",
  "**.xcconfig",
  "**/.xcconfig",
  "**/*.xcconfig",
  "**/**.xcconfig",
  ".xlsx",
  "*.xlsx",
  "**.xlsx",
  "**/.xlsx",
  "**/*.xlsx",
  "**/**.xlsx",
  ".xml",
  "*.xml",
  "**.xml",
  "**/.xml",
  "**/*.xml",
  "**/**.xml",
  ".yaml",
  "*.yaml",
  "**.yaml",
  "**/.yaml",
  "**/*.yaml",
  "**/**.yaml",
  ".yml",
  "*.yml",
  "**.yml",
  "**/.yml",
  "**/*.yml",
  "**/**.yml",
  ".zip",
  "*.zip",
  "**.zip",
  "**/.zip",
  "**/*.zip",
  "**/**.zip",
  ".zsh",
  "*.zsh",
  "**.zsh",
  "**/.zsh",
  "**/*.zsh",
  "**/**.zsh",
  "*secret*",
  "**/secret/**",
  "**/secret?/**",
  "*secrets*",
  "**/secrets/**",
  "**/secrets?/**",
  "*scripts*",
  "**/scripts/**",
  "**/scripts?/**",
  "*config*",
  "**/config/**",
  "**/config?/**",
]


console.log(`Initialized with patterns: ${allPatterns.length}`)

const filesOpen = [
  "extension-output-undefined_publisher.copilot-ignore-#1-CopilotIgnore",
  "/Users/Mathieu/Desktop/copilot-setup/DISABLE/test.xml",
]

console.log(`filesOpen: ${filesOpen.join(' | ')}`)
const foundOpenIgnoredEditor = filesOpen.find((filePath) => matchesAnyPattern(filePath, allPatterns))

console.log({ foundOpenIgnoredEditor, config: !foundOpenIgnoredEditor })
// setConfigEnabled(!foundOpenIgnoredEditor)